package com.example.push.activity;

import java.util.Map;

import com.example.push.R;
import com.example.push.table.Globals;
import com.example.push.table.Person;
import com.example.push.table.Professor;
import com.example.push.table.Student;

import android.content.Intent;
import android.content.res.Resources.Theme;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.os.SystemClock;
import android.util.Log;
import android.view.View;
import android.widget.Button;
import android.widget.CompoundButton;
import android.widget.EditText;
import android.widget.Switch;
import android.widget.Toast;

public class MainActivity extends PreferenceActivity {

	private Globals globals;

	private EditText login_id;
	private EditText login_pwd;
	private Button login_btn;
	private Intent intent;
	private Switch switch_btn;

	@Override
	protected void onCreate(Bundle savedInstanceState) {

		
		Thread t = new Thread(){
			@Override
			public void run() {
				intent = new Intent(getApplicationContext(), SplashActivity.class);
				startActivity(intent);
			};
		};
		t.start();
		
		try{
			t.join();
		}catch(InterruptedException e){
			Log.i("msg", " "+ e);
		}
		
	
		
		super.onCreate(savedInstanceState);
		setContentView(R.layout.layout_main);
		
		setSlideHolder();

		globals = Globals.getInstance();

		login_id = (EditText) findViewById(R.id.login_id);
		login_pwd = (EditText) findViewById(R.id.login_pwd);
		login_btn = (Button) findViewById(R.id.login_btn);

		switch_btn = (Switch) findViewById(R.id.switch_btn);


		switch_btn
				.setOnCheckedChangeListener(new Switch.OnCheckedChangeListener() {
					public void onCheckedChanged(CompoundButton cd,
							boolean isChecking) {
						if (!isChecking) {
							delete_login();
						}
					}
				});

		login_btn.setOnClickListener(new View.OnClickListener() {

			@Override
			public void onClick(View v) {

				String id = login_id.getText().toString();
				String pw = login_pwd.getText().toString();
				Log.i("msg", "onClick start ");

				if (authCheck(id, pw)) {
					if (switch_btn.isChecked()) {
						Log.i("msg", "toggle ok");
						Toast.makeText(getApplicationContext(),
								"Swtich okokok", Toast.LENGTH_LONG).show();
						insert_login(id, pw);
					}
					startActivity(intent);
					finish();
				}
			}
		});
		
		if (isCheck_login()) {
			Toast.makeText(getApplicationContext(), "Check", Toast.LENGTH_LONG).show();
			Person p = check_login();
			if(authCheck(p.getId(), p.getPw())){
				startActivity(intent);
				finish();	
			}
		}
	}

	private boolean authCheck(String id, String pw) {

		Person person = globals.getPerson();

		 
		
		if (person.getsList().containsKey(id)
				|| person.getpList().containsKey(id)) {

			Map<String, Student> sList = person.getsList();
			Map<String, Professor> pList = person.getpList();

			if (sList.get(id) != null) {
				if (sList.get(id).getId().equals(id)
						&& sList.get(id).getPw().equals(pw)) {
					intent = new Intent(getApplicationContext(),
							StudentActivity.class);
					return true;
				}
			}
			if (pList.get(id) != null) {
				if (pList.get(id).getId().equals(id)
						&& pList.get(id).getPw().equals(pw)) {
					intent = new Intent(getApplicationContext(),
							ProfessorActivity.class);
					return true;
				}
			}
			Toast.makeText(this, "비밀번호를 확인해 주세요.", Toast.LENGTH_LONG).show();
			return false;
		} else {
			Toast.makeText(this, "ID를 확인해 주세요.", Toast.LENGTH_LONG).show();
			return false;
		}
	}
	
	
}
